# Generated by Django 4.1.7 on 2023-04-26 01:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('against_bug', models.FloatField(verbose_name='Against_bug')),
                ('against_dark', models.FloatField(verbose_name='Against_dark')),
                ('against_dragon', models.FloatField(verbose_name='Against_dragon')),
                ('against_electric', models.FloatField(verbose_name='Against_electric')),
                ('against_fairy', models.FloatField(verbose_name='Against_fairy')),
                ('against_fight', models.FloatField(verbose_name='Against_fight')),
                ('against_fire', models.FloatField(verbose_name='Against_fire')),
                ('against_flying', models.FloatField(verbose_name='Against_flying')),
                ('against_ghost', models.FloatField(verbose_name='Against_ghost')),
                ('against_grass', models.FloatField(verbose_name='Against_grass')),
                ('against_ground', models.FloatField(verbose_name='Against_ground')),
                ('against_ice', models.FloatField(verbose_name='Against_ice')),
                ('against_normal', models.FloatField(verbose_name='Against_normal')),
                ('against_poison', models.FloatField(verbose_name='Against_poison')),
                ('against_psychic', models.FloatField(verbose_name='Against_psychic')),
                ('against_rock', models.FloatField(verbose_name='Against_rock')),
                ('against_steel', models.FloatField(verbose_name='Against_steel')),
                ('against_water', models.FloatField(verbose_name='Against_water')),
                ('attack', models.IntegerField(verbose_name='Attack')),
                ('base_total', models.IntegerField(verbose_name='Base_total')),
                ('capture_rate', models.IntegerField(verbose_name='Capture_rate')),
                ('defense', models.IntegerField(verbose_name='Defense')),
                ('height_m', models.FloatField(verbose_name='Height_m')),
                ('hp', models.IntegerField(verbose_name='Hp')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('pokedex_number', models.IntegerField(verbose_name='Pokedex_number')),
                ('sp_attack', models.IntegerField(verbose_name='Sp_attack')),
                ('sp_defense', models.IntegerField(verbose_name='Sp_defense')),
                ('speed', models.IntegerField(verbose_name='Speed')),
                ('type1', models.CharField(max_length=255, verbose_name='Type1')),
                ('type2', models.CharField(max_length=255, verbose_name='Type2')),
                ('weight_kg', models.FloatField(verbose_name='Weight_kg')),
                ('is_legendary', models.IntegerField(verbose_name='is_legendary')),
            ],
        ),
    ]
